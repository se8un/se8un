// —Å—á–µ—Ç—á–∏–∫
const countElement = document.querySelector('#count');
let counter = 0;

const matalofon = {
  KeyQ: new Audio('./sounds/metalofon/zvuk-notyi-do.wav'),
  KeyW: new Audio('./sounds/metalofon/zvuk-notyi-re.wav'),
  KeyE: new Audio('./sounds/metalofon/zvuk-notyi-mi.wav'),
  KeyA: new Audio('./sounds/metalofon/zvuk-notyi-fa.wav'),
  KeyS: new Audio('./sounds/metalofon/zvuk-notyi-sol.wav'),
  KeyD: new Audio('./sounds/metalofon/zvuk-notyi-lya.wav'),
  KeyZ: new Audio('./sounds/metalofon/zvuk-notyi-si.wav'),
  KeyX: new Audio('./sounds/metalofon/zvuk-notyi-do-vo-vtoroy-oktave.wav'),
  KeyC: new Audio('./sounds//metalofon/zvuk-notyi-do.wav'),
};

const pianino = {
  KeyQ: new Audio('./sounds/pianino/zvuk-notyi-do-rastyanutyiy.wav'),
  KeyW: new Audio('./sounds/pianino/zvuk-notyi-re-rastyanutyiy.wav'),
  KeyE: new Audio('./sounds/pianino/zvuk-notyi-mi-rastyanutyiy.wav'),
  KeyA: new Audio('./sounds/pianino/zvuk-notyi-fa-rastyanutyiy.wav'),
  KeyS: new Audio('./sounds/pianino/zvuk-notyi-sol-rastyanutyiy.wav'),
  KeyD: new Audio('./sounds/pianino/zvuk-notyi-lya-rastyanutyiy.wav'),
  KeyZ: new Audio('./sounds/pianino/zvuk-notyi-si-rastyanutyiy.wav'),
  KeyX: new Audio('./sounds/pianino/zvuk-notyi-do-vo-vtoroy-oktave-rastyanutyiy.wav'),
  KeyC: new Audio('./sounds/pianino/zvuk-notyi-do-rastyanutyiy.wav'),
};

const musics = {
  Digit1: new Audio('./sounds/melody/1.wav'),
  Digit2: new Audio('./sounds/melody/2.wav'),
  Digit3: new Audio('./sounds/melody/3.wav'),
  Digit4: new Audio('./sounds/melody/4.wav'),
  Digit5: new Audio('./sounds/melody/5.wav'),

  Digit6: new Audio('./sounds/melody/1.wav'),
  Digit7: new Audio('./sounds/melody/1.wav'),
  Digit8: new Audio('./sounds/melody/1.wav'),
};

let sounds = matalofon;

// –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞
const isPlaying = {};

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º preload="auto" –¥–ª—è –≤—Å–µ—Ö –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤
Object.values(sounds).forEach((audio) => (audio.preload = 'auto'));
Object.values(musics).forEach((audio) => (audio.preload = 'auto'));

setLoop(musics);

function handlePlaySound(e) {
  // –ë–µ—Ä–µ—Ç `data-key` –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –∏–ª–∏ `code` –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–ª–∞–≤–∏—à–∏
  const key = e.code || e.target.dataset.key;
  let audio = null;
  const keyElement = document.querySelector(`.key[data-key="${key}"]`);

  if (key in sounds) {
    audio = sounds[key];
    stopSound(audio, keyElement);
    audio.play();

    counter++;
    countElement.innerText = counter;
    getRandomColor(countElement);
    getRandomColor(keyElement);
  }

  if (key in musics) {
    audio = musics[key];
    stopSound(audio, keyElement);
    if (isPlaying[key]) {
      isPlaying[key] = false;
    } else {
      audio.play();
      keyElement.classList.add('playing');
      keyElement.classList.add('invertColorPicture');
      isPlaying[key] = true;
    }
  }

  // Instruments
  if (key === 'Instruments') {
    if (sounds === matalofon) {
      sounds = pianino;
      keyElement.classList.add('changePianino');
    } else {
      sounds = matalofon;
      keyElement.classList.remove('changePianino');
    }
  }

  if (!audio || !keyElement) return;

  // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å 'playing' –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
  setTimeout(() => keyElement.classList.remove('playing'), 100);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à–∏ –∏ –∫–ª–∏–∫–µ –º—ã—à–∏
window.addEventListener('keydown', handlePlaySound);
window.addEventListener('click', handlePlaySound);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
const keys = document.querySelectorAll('.key');
keys.forEach((key) =>
  key.addEventListener('transitionend', (e) => {
    if (e.propertyName === 'transform') {
      key.classList.remove('playing');
    }
  })
);

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–∏–∫–ª–∏—á–Ω–æ–≥–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–≤—É–∫–∞
function setLoop(objSounds) {
  for (let sound in objSounds) {
    objSounds[sound].loop = true;
    isPlaying[sound] = false;
  }
}

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–≤—É–∫–∞
function stopSound(audio, keyElement) {
  audio.pause();
  audio.currentTime = 0;
  keyElement.classList.add('playing');
  keyElement.classList.remove('invertColorPicture');
}

// –°–ª—É—á–∞–π–Ω—ã–π —Ü–≤–µ—Ç
function getRandomColor(element) {
  element.style.setProperty('--random-color-r', Math.max(64, Math.floor(Math.random() * 192) + 64));
  element.style.setProperty('--random-color-g', Math.max(64, Math.floor(Math.random() * 192) + 64));
  element.style.setProperty('--random-color-b', Math.max(64, Math.floor(Math.random() * 192) + 64));
}

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
window.onload = function () {
  document.querySelector('#modal-title').innerText = 'üî• üôÉ üéµ üéº ü¶Å';
  document.querySelector('#modal-description').innerText = `
  QWE  ASD ZXC - –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–æ–≤\n
  1 2 3 4 5 6 7 8 - –¥–ª—è –≤—ã–±–æ—Ä–∞ –º—É–∑—ã–∫–∏\n
  –°–ø—Ä–∞–≤–∞ –≤–≤–µ—Ä—Ö—É –µ—Å—Ç—å —Å—á–µ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –∫–ª–∞–≤–∏—à\n
  –í–Ω–∏–∑—É –∫–Ω–æ–ø–∫–∞ –º–µ—Ç–∞–ª–æ—Ñ–æ–Ω/–ø–∏–∞–Ω–∏–Ω–æ\n
  –ì–ª–∞–≤–Ω–æ–µ, –Ω–µ –∑–∞–±—ã–≤–∞–π –ø—Ä–∏—Ç–∞–Ω—Ü–æ–≤—ã–≤–∞—Ç—å!`;
  document.querySelector('#modal').style.display = 'flex'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ
};

// –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
function closeModal() {
  const modal = document.querySelector('#modal');
  modal.style.display = 'none';
}

// –¥–æ–±–∞–≤–ª—è–µ–º –≤ sessionStorage, —á—Ç–æ–±—ã –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ
if (!sessionStorage.getItem('modalShown')) {
  modal.style.display = 'flex';
  sessionStorage.setItem('modalShown', 'true');
}
